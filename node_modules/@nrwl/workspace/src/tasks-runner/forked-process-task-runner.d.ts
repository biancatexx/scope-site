import { DefaultTasksRunnerOptions } from './default-tasks-runner';
import { Task } from './tasks-runner';
export declare class ForkedProcessTaskRunner {
    private readonly options;
    workspaceRoot: string;
    cliPath: string;
    private processes;
    constructor(options: DefaultTasksRunnerOptions);
    forkProcessPipeOutputCapture(task: Task, { forwardOutput }: {
        forwardOutput: boolean;
    }): Promise<{
        code: number;
        terminalOutput: string;
    }>;
    forkProcessDirectOutputCapture(task: Task, { forwardOutput, temporaryOutputPath, }: {
        forwardOutput: boolean;
        temporaryOutputPath: string;
    }): Promise<{
        code: number;
        terminalOutput: string;
    }>;
    private readTerminalOutput;
    private envForForkedProcess;
    private signalToCode;
    private setupOnProcessExitListener;
}
